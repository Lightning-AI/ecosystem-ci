jobs:
- ${{ each config in parameters.configs }}:
  - job:
    displayName: ${{config}}
    # how long to run the job before automatically cancelling
    timeoutInMinutes: 75
    # how much time to give 'run always even if cancelled tasks' before stopping them
    cancelTimeoutInMinutes: 2

    pool: gridai-spot-pool
    # this need to have installed docker in the base image...
    container:
      # base ML image: mcr.microsoft.com/azureml/openmpi3.1.2-cuda10.2-cudnn8-ubuntu18.04
      image: "pytorchlightning/pytorch_lightning:base-cuda-py3.9-torch1.8"
      # image: "pytorch/pytorch:1.8.1-cuda11.0-cudnn8-runtime"
      options: "-it --rm --runtime=nvidia -e NVIDIA_VISIBLE_DEVICES=all --shm-size=32g"

    workspace:
      clean: all
    steps:

    - bash: |
        lspci | egrep 'VGA|3D'
        whereis nvidia
        nvidia-smi
        python --version
      displayName: 'Image info & NVIDIA'

    - bash: |
        pip --version
        pip install --requirement requirements.txt
        pip list
      displayName: 'Install dependencies'

    - bash: |
        python -c "import torch ; mgpu = torch.cuda.device_count() ; assert mgpu > 0, f'GPU: {mgpu}'"
      displayName: 'Sanity check'

    - bash: |
        python .actions/assistant.py prepare_env --config_file=configs/${{config}} > prepare_env.sh
        cat prepare_env.sh
      displayName: 'Create scripts'

    - bash: |
        bash prepare_env.sh
        ls -l
      displayName: 'Prepare env.'

    - script: |
        ARGS=$(python .actions/assistant.py specify_tests --config_file=configs/${{config}} 2>&1)
        printf "PyTest arguments: $ARGS\n"
        echo "##vso[task.setvariable variable=args;isOutput=true]$ARGS"
      name: testing
      displayName: 'testing args'

    - bash: |
        coverage run -m pytest ${PYTEST_ARGS} -v
      env:
        PYTEST_ARGS: $(testing.args)
      displayName: 'Integration tests'

    # ToDo: need to specify package to be monitored
    #- bash: |
    #    coverage report
    #    coverage xml
    #  displayName: 'Statistics'

    # ToDo: add Slack notification
