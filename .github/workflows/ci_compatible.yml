name: CI compatibility

# see: https://help.github.com/en/actions/reference/events-that-trigger-workflows
on:  # Trigger the workflow on push or pull request, but only for the main branch
  push:
    branches: [main]
  pull_request:
    branches: [main]
  schedule:
    # At the end of every day
    - cron: "0 0 * * *"
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: ${{ github.ref != 'refs/heads/main' }}

defaults:
  run:
    shell: bash

jobs:
  generator:
    runs-on: ubuntu-latest
    timeout-minutes: 5
    # Map a step output to a job output
    outputs:
      matrix: ${{ steps.diff-files.outputs.runtimes }}
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-python@v2
      with:
        python-version: 3.8

    - name: Get PR diff
      id: diff-files
      env:
        PR_NUMBER: "${{ github.event.pull_request.number }}"
      run: |
        pip install -q -r requirements.txt
        pr_runtimes=$(python actions/assistant.py list_runtimes $PR_NUMBER 2>&1)
        echo $pr_runtimes
        echo "runtimes={include: $pr_runtimes}" >> $GITHUB_OUTPUT

    - run: echo "[]" > projects.json
    - name: Upload placeholder
      uses: actions/upload-artifact@v2
      with:
        name: compatibility-${{ github.sha }}
        path: projects.json

  pytester:
    needs: generator
    runs-on: ${{ matrix.os }}
    strategy:
      max-parallel: 25
      fail-fast: false
      matrix: ${{ fromJSON(needs.generator.outputs.matrix) }}
    timeout-minutes: 35
    steps:
    - uses: actions/checkout@v2

    - name: Testing the project
      uses: ./.github/actions/pytester
      with:
        python: ${{ matrix.python }}
        config: ${{ matrix.config }}

    - name: Dumping the job's detail
      if: always()
      uses: ./.github/actions/job-dump
      with:
        artifact-name: project-${{ github.sha }}-${{ strategy.job-index }}

    # report failure to Slack
    # https://www.ravsam.in/blog/send-slack-notification-when-github-actions-fails/
    # https://dev.to/adamkdean/slack-notifications-with-github-actions-1lk5
    # https://axolo.co/blog/p/top-4-github-action-slack-integration
    - name: Slack notification
      if: failure() && github.event_name == 'schedule'
      uses: ravsamhq/notify-slack-action@v1
      with:
        status: ${{ job.status }}
        token: ${{ secrets.GITHUB_TOKEN }}
        notification_title: ${{ format('Env; {0} py{1} for *{2}*', runner.os, matrix.python, matrix.config) }}
        message_format: '{emoji} *{workflow}* {status_message}, see <{run_url}|detail>, cc: ${{ steps.extras.outputs.contacts }}'
        footer: 'Linked Repo <{repo_url}|{repo}>'
      env:
        SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}


  collector:
    runs-on: ubuntu-latest
    needs: [generator, pytester]
    if: always()
    strategy:
      max-parallel: 1  # run sequential to prevent download/upload collisions
      matrix: ${{ fromJSON(needs.generator.outputs.matrix) }}
    steps:
    - name: Download üì• summary
      uses: actions/download-artifact@v3
      with:
        name: compatibility-${{ github.sha }}
    - name: Download üì• project
      uses: actions/download-artifact@v3
      with:
        name: project-${{ github.sha }}-${{ strategy.job-index }}

    - run: ls -l
    - name: append result
      run: |
        import json
        with open("projects.json") as fp:
          data = json.load(fp)
        with open("meta.json") as fp:
          data.append(json.load(fp))
        with open("projects.json", "w") as fp:
          json.dump(data, fp)
      shell: python

    - name: Upload pytest test results
      uses: actions/upload-artifact@v2
      with:
        name: compatibility-${{ github.sha }}
        path: projects.json


  watcher:
    runs-on: ubuntu-latest
    needs: pytester
    steps:
    - run: echo "${{ needs.pytester.result }}"


  messanger:
    runs-on: ubuntu-latest
    needs: collector
    # always and success is need for running if eventually pytester failed
    if: always() && needs.collector.result == 'success' #&& (github.event_name == 'schedule' || github.event_name == 'workflow_dispatch')  # FIXME
    steps:
    - name: Download üì• summary
      uses: actions/download-artifact@v3
      with:
        name: compatibility-${{ github.sha }}
    - run: cat projects.json

    - name: Post to a Slack channel
      # TODO
      uses: slackapi/slack-github-action@v1.23.0
      with:
        # Slack channel id, channel name, or user id to post message.
        # See also: https://api.slack.com/methods/chat.postMessage#channels
        channel-id: lightning-gallery-alerts
        # For posting a rich message using Block Kit - https://app.slack.com/block-kit-builder
        payload: |
          {
            "blocks": [
              {
                "type": "header",
                "text": {
                  "type": "plain_text",
                  "text": "[Prod] ${{ matrix.app }} Clone And Run Test Failed ‚ùå‚õî",
                  "emoji": true
                }
              },
              {
                "type": "section",
                "text": {
                  "type": "mrkdwn",
                  "text": "Check logs or download the video artifacts from workflow <https://github.com/...>"
                }
              },
              {
                "type": "divider"
              },
              {
                "type": "section",
                "text": {
                  "type": "mrkdwn",
                  "text": "TODO: tag owners to notify them of the failure"
                }
              }
            ]
          }
      env:
        SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
